1、#itemAddForm [name=desc]

httpclient工具的使用

redis缓存如何实现同步

compareTo

springboot的启动类@ComponentScan扫描范围

mybatis查询获得map集合


//创建代理类
public class StandardInvocation implements InvocationHandler {

    private Object obj;
    
    StandardInvocation(Object obj){
        this.obj=obj;
    }
    
    @Override
    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
        System.out.println("before method excute!");
        Object result = method.invoke(obj, args);
        System.out.println("after method excute!");
        return result;
    }

}

//测试动态代理
    public static void main(String[] args) {
        //创建一个被代理者
        Cls c = new Cls();
        //创建一个InvocationHandler，描述我们希望代理者执行哪些操作
        InvocationHandler i = new StandardInvocation(c);
        //通过刚才创建的InvocationHandler，创建真正的代理者。第一个参数是类加载器，第二个参数是这个代理者实现哪些接口
        Itf pxy = (Itf) Proxy.newProxyInstance(Cls.class.getClassLoader(), new Class[] { Itf.class }, i);
        pxy.printSth("Hi");
    }


分布式   和rpc框架

sso和缓存和缓存同步的区别

分页查询

外网和内网使用

zookeeper配置 以及集群  dubbo的

处理数据库级别的并发问题

分库分表的设计

redis持久化的解决方案

solradmin中的df查询

nio 和io

代理对象

使用qq和微博账号登录

tomcat实现热部署，在不关机的情况下部署工程



spring的schema.xml文件


320121197809151713 952789
http://www.95598.cn/
zanjun9527	z3-4
vector数据类型
枚举的使用


printstream 和 printwriter

字符流读取的长度问题 文本长度超过1024 的再次读取问题

bytearrayinputsteam 和bytearrayoutputstream（）写入到哪里去了

bytearrayinputsteam 和bytearrayoutputsteam


流输出到控制台  设计到转换流 io 	转换流的使用 硬盘中的都是字节

byte码表对应

getByte（）编码 默认编码是gbk